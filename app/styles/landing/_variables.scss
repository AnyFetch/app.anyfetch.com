// ------------------
// Specialized Colors
// ------------------

$blue-dark: #3c3d47;
$gray-light: #E8EBEB;

$blue-dark: #1E3F45 ;
$blue-light : #a0d1e2;
$blue-medium : #3fa0c2;

$orange: #F78D3F;

// --------------------
// Foundation Variables
// --------------------

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
// $base-line-height: 150%;

// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Various global styles
$default-float: left;

// $body-bg: #fff;
$body-font-family: 'PT Sans', sans-serif;

// Colors
$primary-color: #23B4D4;

// Media Queries
$small-screen: 600px;
$medium-screen: 1000px;

// Typography
$header-font-family: 'PT Sans', sans-serif;
$header-font-weight: bold;
$header-font-color: white;

// Button
$button-border-width: 0px;
$button-border-style: none;

// Table
$table-even-row-bg: #e9e9e9;

// Top Bar
$topbar-bg: $primary-color;
$topbar-dropdown-bg: lighten($topbar-bg, 10%);
$topbar-link-hover-lightness: -30%; // Darken by 30%
$topbar-link-bg-hover: darken($topbar-bg, 10%);
$topbar-link-bg-active: darken($topbar-bg, 10%);
$topbar-menu-link-color-toggled: #fff;
$topbar-menu-icon-color-toggled: #fff;
$topbar-breakpoint: emCalc(768); // Change to 9999px for always mobile layout
$topbar-divider-border-bottom: solid 1px darken($topbar-bg, 3%);
$topbar-divider-border-top: solid 1px lighten($topbar-bg, 20%);